# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
# Note, you can also install detox ("pip install detox") to execute tox in
# parallel.

[build-system]
requires = [ "setuptools == 40.6.3", "wheel == 0.32.3"]

[tox]
isolated_build = True
envlist =
    py37
    py38
    py39
    py310
    py311
    check-wheel-contents

[testenv]
deps =
    pylint==2.15.8
whitelist_externals =
    /usr/bin/bash
    /usr/bin/echo
setenv =
    TOX_INI_DIR = {toxinidir}
commands =
    # super simple test time.
    # pylint
    bash -c "echo $(find . ! -name 'emoji_fzf_emojilib.py' ! -path './.*' ! -path './build/*' -name '*.py')"
    bash -c "pylint $(find . ! -name 'emoji_fzf_emojilib.py' ! -path './.*' ! -path './build/*' -name '*.py')"
    # confirm we can build the wheel with no errors. use env-specific working dir
    # so we don't ruin things for our friends
    python setup.py bdist_wheel --bdist-dir {envdir}/bdist --dist-dir {envdir}/dist
    # test installation
    bash -c "pip install {envdir}/dist/*.whl"
    # very basic runtime checks
    emoji-fzf --help
    emoji-fzf --version
    bash -c "emoji-fzf preview > /dev/null"
    bash -c "emoji-fzf preview --prepend > /dev/null"
    bash -c "emoji-fzf preview | grep -q '^thumbs_up'"
    bash -c "emoji-fzf preview --prepend | grep -q '^üëç thumbs_up'"
    bash -c "emoji-fzf --custom-aliases test-custom-aliases.json preview | grep -q 'random-custom-test-alias'"
    # --skip-multichar should return less lines
    bash -c 'test "$(emoji-fzf preview --skip-multichar | wc -l)" -lt "$(emoji-fzf preview | wc -l)"'
    emoji-fzf get
    emoji-fzf get blahblahgargbagenogood
    emoji-fzf get dragon
    emoji-fzf get dragon bus
    emoji-fzf get --name dragon
    emoji-fzf get --name dragon bus
    echo "dragon" | emoji-fzf get
    echo "dragon bus" | emoji-fzf get shower

# sanity checks on the wheel
[testenv:check-wheel-contents]
deps=
    check-wheel-contents==0.3.1
basepython=python3
commands=
    python setup.py bdist_wheel --bdist-dir {envdir}/bdist --dist-dir {envdir}/dist
    bash -c "check-wheel-contents {envdir}/dist/*.whl"
