# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
# Note, you can also install detox ("pip install detox") to execute tox in
# parallel.

[build-system]
requires = [ "setuptools == 40.6.3", "wheel == 0.32.3"]

[tox]
envlist = py27, py36, py37, py38, black, check-commit

[testenv]
deps =
    py27: pylint==1.9.4
    py36,py37,py38: pylint==2.3.1
whitelist_externals =
    /bin/bash
    /bin/echo
setenv =
    TOX_INI_DIR = {toxinidir}
commands =
    # super simple test time.
    # pylint
    bash -c "echo $(find . ! -name 'emoji_fzf_emojilib.py' ! -path './.*' ! -path './build/*' -name '*.py')"
    bash -c "pylint $(find . ! -name 'emoji_fzf_emojilib.py' ! -path './.*' ! -path './build/*' -name '*.py')"
    # confirm we can build the wheel with no errors. use env-specific working dir
    # so we don't ruin things for our friends
    {envpython} setup.py bdist_wheel --bdist-dir {envdir}/bdist --dist-dir {envdir}/dist
    # test installation
    bash -c "pip install {envdir}/dist/*.whl"
    # very basic runtime checks
    emoji-fzf --help
    emoji-fzf --version
    bash -c "emoji-fzf preview > /dev/null"
    emoji-fzf get --name dragon
    echo "dragon" | emoji-fzf get

[testenv:black]
deps=
    black==19.10b0
basepython=python3
commands=
    # install the package to pick up requirements
    pip install .

    # a hilarious way of extending black's default exclude list, which doesn't
    # work through tox's quote escaping magic \o\
    # black --check --verbose \
    #    --exclude $({envpython} -c "import black; print('|'.join(black.DEFAULT_EXCLUDES.strip('/()').split('|') + ['\.eggs']))") \
    #   .

    # instead just manually exclude
    black --check --verbose \
      --exclude "\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|_build|buck-out|build|dist|\.eggs|emoji_fzf_emojilib.py" .

[testenv:check-commit]
deps=
    py-commit-checker==0.2.0
basepython=python3
commands=
    # verify the top commit adheres to our convention
    py-commit-checker --emojis
